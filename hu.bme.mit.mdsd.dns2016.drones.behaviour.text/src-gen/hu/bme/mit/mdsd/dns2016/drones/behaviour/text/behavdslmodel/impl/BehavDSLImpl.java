/**
 * generated by Xtext 2.9.2
 */
package hu.bme.mit.mdsd.dns2016.drones.behaviour.text.behavdslmodel.impl;

import hu.bme.mit.mdsd.dns2016.behaviour.DroneBehaviour;

import hu.bme.mit.mdsd.dns2016.drones.behaviour.text.behavdslmodel.BehavDSL;
import hu.bme.mit.mdsd.dns2016.drones.behaviour.text.behavdslmodel.BehavdslmodelPackage;
import hu.bme.mit.mdsd.dns2016.drones.behaviour.text.behavdslmodel.Import;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Behav DSL</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link hu.bme.mit.mdsd.dns2016.drones.behaviour.text.behavdslmodel.impl.BehavDSLImpl#getImportedMission <em>Imported Mission</em>}</li>
 *   <li>{@link hu.bme.mit.mdsd.dns2016.drones.behaviour.text.behavdslmodel.impl.BehavDSLImpl#getBehav <em>Behav</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BehavDSLImpl extends MinimalEObjectImpl.Container implements BehavDSL
{
  /**
   * The cached value of the '{@link #getImportedMission() <em>Imported Mission</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportedMission()
   * @generated
   * @ordered
   */
  protected Import importedMission;

  /**
   * The cached value of the '{@link #getBehav() <em>Behav</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBehav()
   * @generated
   * @ordered
   */
  protected DroneBehaviour behav;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BehavDSLImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BehavdslmodelPackage.Literals.BEHAV_DSL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Import getImportedMission()
  {
    return importedMission;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetImportedMission(Import newImportedMission, NotificationChain msgs)
  {
    Import oldImportedMission = importedMission;
    importedMission = newImportedMission;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BehavdslmodelPackage.BEHAV_DSL__IMPORTED_MISSION, oldImportedMission, newImportedMission);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImportedMission(Import newImportedMission)
  {
    if (newImportedMission != importedMission)
    {
      NotificationChain msgs = null;
      if (importedMission != null)
        msgs = ((InternalEObject)importedMission).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BehavdslmodelPackage.BEHAV_DSL__IMPORTED_MISSION, null, msgs);
      if (newImportedMission != null)
        msgs = ((InternalEObject)newImportedMission).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BehavdslmodelPackage.BEHAV_DSL__IMPORTED_MISSION, null, msgs);
      msgs = basicSetImportedMission(newImportedMission, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BehavdslmodelPackage.BEHAV_DSL__IMPORTED_MISSION, newImportedMission, newImportedMission));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DroneBehaviour getBehav()
  {
    return behav;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBehav(DroneBehaviour newBehav, NotificationChain msgs)
  {
    DroneBehaviour oldBehav = behav;
    behav = newBehav;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BehavdslmodelPackage.BEHAV_DSL__BEHAV, oldBehav, newBehav);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBehav(DroneBehaviour newBehav)
  {
    if (newBehav != behav)
    {
      NotificationChain msgs = null;
      if (behav != null)
        msgs = ((InternalEObject)behav).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BehavdslmodelPackage.BEHAV_DSL__BEHAV, null, msgs);
      if (newBehav != null)
        msgs = ((InternalEObject)newBehav).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BehavdslmodelPackage.BEHAV_DSL__BEHAV, null, msgs);
      msgs = basicSetBehav(newBehav, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BehavdslmodelPackage.BEHAV_DSL__BEHAV, newBehav, newBehav));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BehavdslmodelPackage.BEHAV_DSL__IMPORTED_MISSION:
        return basicSetImportedMission(null, msgs);
      case BehavdslmodelPackage.BEHAV_DSL__BEHAV:
        return basicSetBehav(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BehavdslmodelPackage.BEHAV_DSL__IMPORTED_MISSION:
        return getImportedMission();
      case BehavdslmodelPackage.BEHAV_DSL__BEHAV:
        return getBehav();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BehavdslmodelPackage.BEHAV_DSL__IMPORTED_MISSION:
        setImportedMission((Import)newValue);
        return;
      case BehavdslmodelPackage.BEHAV_DSL__BEHAV:
        setBehav((DroneBehaviour)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BehavdslmodelPackage.BEHAV_DSL__IMPORTED_MISSION:
        setImportedMission((Import)null);
        return;
      case BehavdslmodelPackage.BEHAV_DSL__BEHAV:
        setBehav((DroneBehaviour)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BehavdslmodelPackage.BEHAV_DSL__IMPORTED_MISSION:
        return importedMission != null;
      case BehavdslmodelPackage.BEHAV_DSL__BEHAV:
        return behav != null;
    }
    return super.eIsSet(featureID);
  }

} //BehavDSLImpl
