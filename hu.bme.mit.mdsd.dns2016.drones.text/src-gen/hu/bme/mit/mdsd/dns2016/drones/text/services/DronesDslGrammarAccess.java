/*
 * generated by Xtext 2.9.2
 */
package hu.bme.mit.mdsd.dns2016.drones.text.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DronesDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class MissionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.Mission");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMissionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMissionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cActionsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cActionsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_3_2_0 = (RuleCall)cActionsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cActionsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cActionsActionParserRuleCall_3_3_1_0 = (RuleCall)cActionsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cDronesAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cDronesDroneParserRuleCall_5_0_0 = (RuleCall)cDronesAssignment_5_0.eContents().get(0);
		private final Assignment cDronesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDronesDroneParserRuleCall_5_1_0 = (RuleCall)cDronesAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cFieldObjectsAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cFieldObjectsFieldObjectParserRuleCall_6_0_0 = (RuleCall)cFieldObjectsAssignment_6_0.eContents().get(0);
		private final Assignment cFieldObjectsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cFieldObjectsFieldObjectParserRuleCall_6_1_0 = (RuleCall)cFieldObjectsAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Mission:
		//	{Mission}
		//	'Mission'
		//	'{' ('Actions' '{' actions+=Action ("," actions+=Action)*)? '}' (drones+=Drone drones+=Drone*)?
		//	(fieldObjects+=FieldObject fieldObjects+=FieldObject*)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Mission} 'Mission' '{' ('Actions' '{' actions+=Action ("," actions+=Action)*)? '}' (drones+=Drone drones+=Drone*)?
		//(fieldObjects+=FieldObject fieldObjects+=FieldObject*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Mission}
		public Action getMissionAction_0() { return cMissionAction_0; }
		
		//'Mission'
		public Keyword getMissionKeyword_1() { return cMissionKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('Actions' '{' actions+=Action ("," actions+=Action)*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Actions'
		public Keyword getActionsKeyword_3_0() { return cActionsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//actions+=Action
		public Assignment getActionsAssignment_3_2() { return cActionsAssignment_3_2; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_3_2_0() { return cActionsActionParserRuleCall_3_2_0; }
		
		//("," actions+=Action)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//actions+=Action
		public Assignment getActionsAssignment_3_3_1() { return cActionsAssignment_3_3_1; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_3_3_1_0() { return cActionsActionParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
		
		//(drones+=Drone drones+=Drone*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//drones+=Drone
		public Assignment getDronesAssignment_5_0() { return cDronesAssignment_5_0; }
		
		//Drone
		public RuleCall getDronesDroneParserRuleCall_5_0_0() { return cDronesDroneParserRuleCall_5_0_0; }
		
		//drones+=Drone*
		public Assignment getDronesAssignment_5_1() { return cDronesAssignment_5_1; }
		
		//Drone
		public RuleCall getDronesDroneParserRuleCall_5_1_0() { return cDronesDroneParserRuleCall_5_1_0; }
		
		//(fieldObjects+=FieldObject fieldObjects+=FieldObject*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//fieldObjects+=FieldObject
		public Assignment getFieldObjectsAssignment_6_0() { return cFieldObjectsAssignment_6_0; }
		
		//FieldObject
		public RuleCall getFieldObjectsFieldObjectParserRuleCall_6_0_0() { return cFieldObjectsFieldObjectParserRuleCall_6_0_0; }
		
		//fieldObjects+=FieldObject*
		public Assignment getFieldObjectsAssignment_6_1() { return cFieldObjectsAssignment_6_1; }
		
		//FieldObject
		public RuleCall getFieldObjectsFieldObjectParserRuleCall_6_1_0() { return cFieldObjectsFieldObjectParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class DroneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.Drone");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDroneKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Assignment cSupportedActionsAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final CrossReference cSupportedActionsActionCrossReference_2_1_0_0 = (CrossReference)cSupportedActionsAssignment_2_1_0.eContents().get(0);
		private final RuleCall cSupportedActionsActionEStringParserRuleCall_2_1_0_0_1 = (RuleCall)cSupportedActionsActionCrossReference_2_1_0_0.eContents().get(1);
		private final Group cGroup_2_1_1 = (Group)cGroup_2_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cSupportedActionsAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final CrossReference cSupportedActionsActionCrossReference_2_1_1_1_0 = (CrossReference)cSupportedActionsAssignment_2_1_1_1.eContents().get(0);
		private final RuleCall cSupportedActionsActionEStringParserRuleCall_2_1_1_1_0_1 = (RuleCall)cSupportedActionsActionCrossReference_2_1_1_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//Drone:
		//	'Drone'
		//	name=EString ('{' (supportedActions+=[Action|EString] ("," supportedActions+=[Action|EString])*)?
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'Drone' name=EString ('{' (supportedActions+=[Action|EString] ("," supportedActions+=[Action|EString])*)? '}')?
		public Group getGroup() { return cGroup; }
		
		//'Drone'
		public Keyword getDroneKeyword_0() { return cDroneKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//('{' (supportedActions+=[Action|EString] ("," supportedActions+=[Action|EString])*)? '}')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }
		
		//(supportedActions+=[Action|EString] ("," supportedActions+=[Action|EString])*)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//supportedActions+=[Action|EString]
		public Assignment getSupportedActionsAssignment_2_1_0() { return cSupportedActionsAssignment_2_1_0; }
		
		//[Action|EString]
		public CrossReference getSupportedActionsActionCrossReference_2_1_0_0() { return cSupportedActionsActionCrossReference_2_1_0_0; }
		
		//EString
		public RuleCall getSupportedActionsActionEStringParserRuleCall_2_1_0_0_1() { return cSupportedActionsActionEStringParserRuleCall_2_1_0_0_1; }
		
		//("," supportedActions+=[Action|EString])*
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_1_0() { return cCommaKeyword_2_1_1_0; }
		
		//supportedActions+=[Action|EString]
		public Assignment getSupportedActionsAssignment_2_1_1_1() { return cSupportedActionsAssignment_2_1_1_1; }
		
		//[Action|EString]
		public CrossReference getSupportedActionsActionCrossReference_2_1_1_1_0() { return cSupportedActionsActionCrossReference_2_1_1_1_0; }
		
		//EString
		public RuleCall getSupportedActionsActionEStringParserRuleCall_2_1_1_1_0_1() { return cSupportedActionsActionEStringParserRuleCall_2_1_1_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_2() { return cRightCurlyBracketKeyword_2_2; }
	}
	public class FieldObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.FieldObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cChargeStationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMovableObjectParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cImmovableObjectParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//FieldObject:
		//	ChargeStation | MovableObject | ImmovableObject;
		@Override public ParserRule getRule() { return rule; }
		
		//ChargeStation | MovableObject | ImmovableObject
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ChargeStation
		public RuleCall getChargeStationParserRuleCall_0() { return cChargeStationParserRuleCall_0; }
		
		//MovableObject
		public RuleCall getMovableObjectParserRuleCall_1() { return cMovableObjectParserRuleCall_1; }
		
		//ImmovableObject
		public RuleCall getImmovableObjectParserRuleCall_2() { return cImmovableObjectParserRuleCall_2; }
	}
	public class ChargeStationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.ChargeStation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChargeStationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ChargeStation:
		//	'ChargeStation'
		//	name=EString ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'ChargeStation' name=EString ';'
		public Group getGroup() { return cGroup; }
		
		//'ChargeStation'
		public Keyword getChargeStationKeyword_0() { return cChargeStationKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class MovableObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.MovableObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMovableObjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//MovableObject:
		//	'MovableObject'
		//	name=EString ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'MovableObject' name=EString ';'
		public Group getGroup() { return cGroup; }
		
		//'MovableObject'
		public Keyword getMovableObjectKeyword_0() { return cMovableObjectKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class ImmovableObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.ImmovableObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImmovableObjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ImmovableObject:
		//	'ImmovableObject'
		//	name=EString ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'ImmovableObject' name=EString ';'
		public Group getGroup() { return cGroup; }
		
		//'ImmovableObject'
		public Keyword getImmovableObjectKeyword_0() { return cImmovableObjectKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.Action");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Action:
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0() { return cNameEStringParserRuleCall_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	private final MissionElements pMission;
	private final DroneElements pDrone;
	private final FieldObjectElements pFieldObject;
	private final ChargeStationElements pChargeStation;
	private final MovableObjectElements pMovableObject;
	private final ImmovableObjectElements pImmovableObject;
	private final ActionElements pAction;
	private final EStringElements pEString;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DronesDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pMission = new MissionElements();
		this.pDrone = new DroneElements();
		this.pFieldObject = new FieldObjectElements();
		this.pChargeStation = new ChargeStationElements();
		this.pMovableObject = new MovableObjectElements();
		this.pImmovableObject = new ImmovableObjectElements();
		this.pAction = new ActionElements();
		this.pEString = new EStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Mission:
	//	{Mission}
	//	'Mission'
	//	'{' ('Actions' '{' actions+=Action ("," actions+=Action)*)? '}' (drones+=Drone drones+=Drone*)?
	//	(fieldObjects+=FieldObject fieldObjects+=FieldObject*)?
	//	'}';
	public MissionElements getMissionAccess() {
		return pMission;
	}
	
	public ParserRule getMissionRule() {
		return getMissionAccess().getRule();
	}
	
	//Drone:
	//	'Drone'
	//	name=EString ('{' (supportedActions+=[Action|EString] ("," supportedActions+=[Action|EString])*)?
	//	'}')?;
	public DroneElements getDroneAccess() {
		return pDrone;
	}
	
	public ParserRule getDroneRule() {
		return getDroneAccess().getRule();
	}
	
	//FieldObject:
	//	ChargeStation | MovableObject | ImmovableObject;
	public FieldObjectElements getFieldObjectAccess() {
		return pFieldObject;
	}
	
	public ParserRule getFieldObjectRule() {
		return getFieldObjectAccess().getRule();
	}
	
	//ChargeStation:
	//	'ChargeStation'
	//	name=EString ';';
	public ChargeStationElements getChargeStationAccess() {
		return pChargeStation;
	}
	
	public ParserRule getChargeStationRule() {
		return getChargeStationAccess().getRule();
	}
	
	//MovableObject:
	//	'MovableObject'
	//	name=EString ';';
	public MovableObjectElements getMovableObjectAccess() {
		return pMovableObject;
	}
	
	public ParserRule getMovableObjectRule() {
		return getMovableObjectAccess().getRule();
	}
	
	//ImmovableObject:
	//	'ImmovableObject'
	//	name=EString ';';
	public ImmovableObjectElements getImmovableObjectAccess() {
		return pImmovableObject;
	}
	
	public ParserRule getImmovableObjectRule() {
		return getImmovableObjectAccess().getRule();
	}
	
	//Action:
	//	name=EString;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
