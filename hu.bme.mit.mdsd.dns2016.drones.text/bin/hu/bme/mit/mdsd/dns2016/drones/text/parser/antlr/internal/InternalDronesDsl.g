/*
 * generated by Xtext 2.9.2
 */
grammar InternalDronesDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package hu.bme.mit.mdsd.dns2016.drones.text.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package hu.bme.mit.mdsd.dns2016.drones.text.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import hu.bme.mit.mdsd.dns2016.drones.text.services.DronesDslGrammarAccess;

}

@parser::members {

 	private DronesDslGrammarAccess grammarAccess;

    public InternalDronesDslParser(TokenStream input, DronesDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Mission";
   	}

   	@Override
   	protected DronesDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMission
entryRuleMission returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMissionRule()); }
	iv_ruleMission=ruleMission
	{ $current=$iv_ruleMission.current; }
	EOF;

// Rule Mission
ruleMission returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMissionAccess().getMissionAction_0(),
					$current);
			}
		)
		otherlv_1='Mission'
		{
			newLeafNode(otherlv_1, grammarAccess.getMissionAccess().getMissionKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMissionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='Actions'
			{
				newLeafNode(otherlv_3, grammarAccess.getMissionAccess().getActionsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getMissionAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMissionAccess().getActionsActionParserRuleCall_3_2_0());
					}
					lv_actions_5_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMissionRule());
						}
						add(
							$current,
							"actions",
							lv_actions_5_0,
							"hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getMissionAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMissionAccess().getActionsActionParserRuleCall_3_3_1_0());
						}
						lv_actions_7_0=ruleAction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMissionRule());
							}
							add(
								$current,
								"actions",
								lv_actions_7_0,
								"hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.Action");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getMissionAccess().getRightCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMissionAccess().getDronesDroneParserRuleCall_5_0_0());
					}
					lv_drones_9_0=ruleDrone
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMissionRule());
						}
						add(
							$current,
							"drones",
							lv_drones_9_0,
							"hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.Drone");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMissionAccess().getDronesDroneParserRuleCall_5_1_0());
					}
					lv_drones_10_0=ruleDrone
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMissionRule());
						}
						add(
							$current,
							"drones",
							lv_drones_10_0,
							"hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.Drone");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMissionAccess().getFieldObjectsFieldObjectParserRuleCall_6_0_0());
					}
					lv_fieldObjects_11_0=ruleFieldObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMissionRule());
						}
						add(
							$current,
							"fieldObjects",
							lv_fieldObjects_11_0,
							"hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.FieldObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMissionAccess().getFieldObjectsFieldObjectParserRuleCall_6_1_0());
					}
					lv_fieldObjects_12_0=ruleFieldObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMissionRule());
						}
						add(
							$current,
							"fieldObjects",
							lv_fieldObjects_12_0,
							"hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.FieldObject");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getMissionAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleDrone
entryRuleDrone returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDroneRule()); }
	iv_ruleDrone=ruleDrone
	{ $current=$iv_ruleDrone.current; }
	EOF;

// Rule Drone
ruleDrone returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Drone'
		{
			newLeafNode(otherlv_0, grammarAccess.getDroneAccess().getDroneKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDroneAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDroneRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getDroneAccess().getLeftCurlyBracketKeyword_2_0());
			}
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDroneRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDroneAccess().getSupportedActionsActionCrossReference_2_1_0_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getDroneAccess().getCommaKeyword_2_1_1_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getDroneRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getDroneAccess().getSupportedActionsActionCrossReference_2_1_1_1_0());
							}
							ruleEString
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getDroneAccess().getRightCurlyBracketKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRuleFieldObject
entryRuleFieldObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldObjectRule()); }
	iv_ruleFieldObject=ruleFieldObject
	{ $current=$iv_ruleFieldObject.current; }
	EOF;

// Rule FieldObject
ruleFieldObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFieldObjectAccess().getChargeStationParserRuleCall_0());
		}
		this_ChargeStation_0=ruleChargeStation
		{
			$current = $this_ChargeStation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFieldObjectAccess().getMovableObjectParserRuleCall_1());
		}
		this_MovableObject_1=ruleMovableObject
		{
			$current = $this_MovableObject_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFieldObjectAccess().getImmovableObjectParserRuleCall_2());
		}
		this_ImmovableObject_2=ruleImmovableObject
		{
			$current = $this_ImmovableObject_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleChargeStation
entryRuleChargeStation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChargeStationRule()); }
	iv_ruleChargeStation=ruleChargeStation
	{ $current=$iv_ruleChargeStation.current; }
	EOF;

// Rule ChargeStation
ruleChargeStation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ChargeStation'
		{
			newLeafNode(otherlv_0, grammarAccess.getChargeStationAccess().getChargeStationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChargeStationAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChargeStationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getChargeStationAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleMovableObject
entryRuleMovableObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMovableObjectRule()); }
	iv_ruleMovableObject=ruleMovableObject
	{ $current=$iv_ruleMovableObject.current; }
	EOF;

// Rule MovableObject
ruleMovableObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MovableObject'
		{
			newLeafNode(otherlv_0, grammarAccess.getMovableObjectAccess().getMovableObjectKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMovableObjectAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMovableObjectRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getMovableObjectAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleImmovableObject
entryRuleImmovableObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImmovableObjectRule()); }
	iv_ruleImmovableObject=ruleImmovableObject
	{ $current=$iv_ruleImmovableObject.current; }
	EOF;

// Rule ImmovableObject
ruleImmovableObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ImmovableObject'
		{
			newLeafNode(otherlv_0, grammarAccess.getImmovableObjectAccess().getImmovableObjectKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImmovableObjectAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImmovableObjectRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getImmovableObjectAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getActionAccess().getNameEStringParserRuleCall_0());
			}
			lv_name_0_0=ruleEString
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getActionRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"hu.bme.mit.mdsd.dns2016.drones.text.DronesDsl.EString");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
